
kernel.img:     file format elf32-i386


Disassembly of section .text:

00100000 <kernel_main-0xc>:
  100000:	02 b0 ad 1b 03 00    	add    0x31bad(%eax),%dh
  100006:	00 00                	add    %al,(%eax)
  100008:	fb                   	sti    
  100009:	4f                   	dec    %edi
  10000a:	52                   	push   %edx
  10000b:	e4                 	in     $0x55,%al

0010000c <kernel_main>:
  10000c:	55                   	push   %ebp
  10000d:	89 e5                	mov    %esp,%ebp
  10000f:	eb fe                	jmp    10000f <kernel_main+0x3>

00100011 <_start>:
  100011:	bc 00 50 10 00       	mov    $0x105000,%esp
  100016:	50                   	push   %eax
  100017:	53                   	push   %ebx
  100018:	e8 49 00 00 00       	call   100066 <_init>
  10001d:	e8 ea ff ff ff       	call   10000c <kernel_main>
  100022:	fa                   	cli    
  100023:	f4                   	hlt    
  100024:	eb fd                	jmp    100023 <_start+0x12>

Disassembly of section .init.text:

00100026 <myFunc>:
  100026:	55                   	push   %ebp
  100027:	89 e5                	mov    %esp,%ebp
  100029:	83 ec 10             	sub    $0x10,%esp
  10002c:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)
  100033:	eb 04                	jmp    100039 <myFunc+0x13>
  100035:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)
  100039:	83 7d fc 02          	cmpl   $0x2,-0x4(%ebp)
  10003d:	7e f6                	jle    100035 <myFunc+0xf>
  10003f:	b8 00 00 00 00       	mov    $0x0,%eax
  100044:	c9                   	leave  
  100045:	c3                   	ret    

00100046 <myFunc2>:
  100046:	55                   	push   %ebp
  100047:	89 e5                	mov    %esp,%ebp
  100049:	83 ec 10             	sub    $0x10,%esp
  10004c:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)
  100053:	eb 04                	jmp    100059 <myFunc2+0x13>
  100055:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)
  100059:	83 7d fc 02          	cmpl   $0x2,-0x4(%ebp)
  10005d:	7e f6                	jle    100055 <myFunc2+0xf>
  10005f:	b8 00 00 00 00       	mov    $0x0,%eax
  100064:	c9                   	leave  
  100065:	c3                   	ret    

Disassembly of section .init:

00100066 <_init>:
  100066:	55                   	push   %ebp
  100067:	89 e5                	mov    %esp,%ebp
  100069:	5d                   	pop    %ebp
  10006a:	c3                   	ret    

Disassembly of section .fini:

0010006b <_fini>:
  10006b:	55                   	push   %ebp
  10006c:	89 e5                	mov    %esp,%ebp
  10006e:	5d                   	pop    %ebp
  10006f:	c3                   	ret    

Disassembly of section .eh_frame:

00100070 <_GLOBAL_OFFSET_TABLE_-0x74>:
  100070:	14 00                	adc    $0x0,%al
  100072:	00 00                	add    %al,(%eax)
  100074:	00 00                	add    %al,(%eax)
  100076:	00 00                	add    %al,(%eax)
  100078:	01 7a 52             	add    %edi,0x52(%edx)
  10007b:	00 01                	add    %al,(%ecx)
  10007d:	7c 08                	jl     100087 <_fini+0x1c>
  10007f:	01 1b                	add    %ebx,(%ebx)
  100081:	0c 04                	or     $0x4,%al
  100083:	04 88                	add    $0x88,%al
  100085:	01 00                	add    %eax,(%eax)
  100087:	00 1c 00             	add    %bl,(%eax,%eax,1)
  10008a:	00 00                	add    %al,(%eax)
  10008c:	1c 00                	sbb    $0x0,%al
  10008e:	00 00                	add    %al,(%eax)
  100090:	96                   	xchg   %eax,%esi
  100091:	ff                   	(bad)  
  100092:	ff                   	(bad)  
  100093:	ff 20                	jmp    *(%eax)
  100095:	00 00                	add    %al,(%eax)
  100097:	00 00                	add    %al,(%eax)
  100099:	41                   	inc    %ecx
  10009a:	0e                   	push   %cs
  10009b:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
  1000a1:	5c                   	pop    %esp
  1000a2:	c5 0c 04             	lds    (%esp,%eax,1),%ecx
  1000a5:	04 00                	add    $0x0,%al
  1000a7:	00 18                	add    %bl,(%eax)
  1000a9:	00 00                	add    %al,(%eax)
  1000ab:	00 3c 00             	add    %bh,(%eax,%eax,1)
  1000ae:	00 00                	add    %al,(%eax)
  1000b0:	5c                   	pop    %esp
  1000b1:	ff                   	(bad)  
  1000b2:	ff                   	(bad)  
  1000b3:	ff 05 00 00 00 00    	incl   0x0
  1000b9:	41                   	inc    %ecx
  1000ba:	0e                   	push   %cs
  1000bb:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
  1000c1:	00 00                	add    %al,(%eax)
  1000c3:	00 1c 00             	add    %bl,(%eax,%eax,1)
  1000c6:	00 00                	add    %al,(%eax)
  1000c8:	58                   	pop    %eax
  1000c9:	00 00                	add    %al,(%eax)
  1000cb:	00 7a ff             	add    %bh,-0x1(%edx)
  1000ce:	ff                   	(bad)  
  1000cf:	ff 20                	jmp    *(%eax)
  1000d1:	00 00                	add    %al,(%eax)
  1000d3:	00 00                	add    %al,(%eax)
  1000d5:	41                   	inc    %ecx
  1000d6:	0e                   	push   %cs
  1000d7:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
  1000dd:	5c                   	pop    %esp
  1000de:	c5 0c 04             	lds    (%esp,%eax,1),%ecx
  1000e1:	04 00                	add    $0x0,%al
	...

Disassembly of section .bss:

00101000 <stack_bottom>:
	...

Disassembly of section .init.data:

00105000 <__initcall6_start>:
  105000:	46                   	inc    %esi
  105001:	00 10                	add    %dl,(%eax)
	...

Disassembly of section .comment:

00000000 <.comment>:
   0:	47                   	inc    %edi
   1:	43                   	inc    %ebx
   2:	43                   	inc    %ebx
   3:	3a 20                	cmp    (%eax),%ah
   5:	28 47 4e             	sub    %al,0x4e(%edi)
   8:	55                   	push   %ebp
   9:	29 20                	sub    %esp,(%eax)
   b:	37                   	aaa    
   c:	2e 33 2e             	xor    %cs:(%esi),%ebp
   f:	30 00                	xor    %al,(%eax)
